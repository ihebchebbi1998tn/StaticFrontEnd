{
  "generatedAt": "2025-09-02T00:00:00Z",
  "note": "Comprehensive summary of all mock data files and inferred relationships for JSON Crack visualization.",
  "tables": [
    { "name": "article_categories", "file": "src/data/mock/article-categories.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "article_statuses", "file": "src/data/mock/article-statuses.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "articles", "file": "src/data/mock/articles.json", "primaryKey": "id", "sampleFields": ["id","name","sku","category","stock","minStock","price","sellPrice","status","location","supplier"] },
    { "name": "calendar_events", "file": "src/data/mock/calendarData.json", "primaryKey": "id", "sampleFields": ["id","title","start","end","type","relatedType","relatedId","contactId","createdBy"] },
    { "name": "contact_projects", "file": "src/data/mock/contactProjects.json", "primaryKey": "id", "sampleFields": ["id","contactId","name","ownerId","teamMembers","columns","createdAt"] },
    { "name": "contacts", "file": "src/data/mock/contacts.json", "primaryKey": "id", "sampleFields": ["id","name","email","phone","company","position","status","type","roleId","createdBy","modifiedBy"] },
    { "name": "contact_tasks", "file": "src/data/mock/contactTasks.json", "primaryKey": "id", "sampleFields": ["id","title","assigneeId","projectId","contactId","dueDate","estimatedHours","actualHours","columnId"] },
    { "name": "countries", "file": "src/data/mock/countries.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "currencies", "file": "src/data/mock/currencies.json", "primaryKey": "id", "sampleFields": ["id","name","symbol"] },
    { "name": "default_columns", "file": "src/data/mock/defaultColumns.json", "primaryKey": "id", "sampleFields": ["id","title","color","position","isDefault"] },
    { "name": "documents", "file": "src/data/mock/documents.json", "primaryKey": "id", "sampleFields": ["id","fileName","filePath","relatedType","relatedId","category","uploadedBy","uploadedAt"] },
    { "name": "event_types", "file": "src/data/mock/eventTypes.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "field_customers", "file": "src/data/mock/fieldCustomers.json", "primaryKey": "id", "sampleFields": ["id","name","email","phone","company","status","type","tags"] },
    { "name": "field_inventory", "file": "src/data/mock/fieldInventory.json", "primaryKey": "id", "sampleFields": ["id","name","sku","category","stock","minStock","status","location","supplier"] },
    { "name": "inventory_filter_types", "file": "src/data/mock/inventory-filter-types.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "inventory_statuses", "file": "src/data/mock/inventory-statuses.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "leave_types", "file": "src/data/mock/leaveTypes.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "log_levels", "file": "src/data/mock/log-levels.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "offer_item_types", "file": "src/data/mock/offer-item-types.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "offer_statuses", "file": "src/data/mock/offer-statuses.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "offers", "file": "src/data/mock/offers.json", "primaryKey": "id", "sampleFields": ["id","title","contactId","amount","currency","status","assignedTo","items","createdBy"] },
    { "name": "pdf_quality", "file": "src/data/mock/pdf-quality.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "priorities", "file": "src/data/mock/priorities.json", "primaryKey": "id", "sampleFields": ["id","name","color"] },
    { "name": "project_statuses", "file": "src/data/mock/project-statuses.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "project_types", "file": "src/data/mock/project-types.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "projects", "file": "src/data/mock/projects.json", "primaryKey": "id", "sampleFields": ["id","name","ownerId","teamMembers","contactId","budget","status","progress","columns"] },
    { "name": "project_stats", "file": "src/data/mock/projectStats.json", "primaryKey": null, "sampleFields": ["projectId -> {totalTasks,completedTasks,overdueTasks,completionPercentage}"] },
    { "name": "project_tasks", "file": "src/data/mock/projectTasks.json", "primaryKey": "id", "sampleFields": ["id","title","assigneeId","projectId","contactId","status","priority","estimatedHours","actualHours"] },
    { "name": "quickcreate_item_types", "file": "src/data/mock/quickcreate-item-types.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "recurring_intervals", "file": "src/data/mock/recurring-intervals.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "roles", "file": "src/data/mock/roles.json", "primaryKey": "id", "sampleFields": ["id","name","permissions","level"] },
    { "name": "sales", "file": "src/data/mock/sales.json", "primaryKey": "id", "sampleFields": ["id","title","contactId","offerId","amount","currency","status","items","assignedTo"] },
    { "name": "scheduling_statuses", "file": "src/data/mock/scheduling-statuses.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "service_order_statuses", "file": "src/data/mock/service-order-statuses.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "service_categories", "file": "src/data/mock/serviceCategories.json", "primaryKey": "id", "sampleFields": ["id","name","color"] },
    { "name": "service_orders", "file": "src/data/mock/serviceOrders.json", "primaryKey": "id", "sampleFields": ["id","orderNumber","saleId","offerId","title","status","priority","customer","assignedTechnicians","scheduledAt","estimatedDuration","createdBy"] },
    { "name": "services", "file": "src/data/mock/services.json", "primaryKey": "id", "sampleFields": ["id","name","serviceCode","basePrice","hourlyRate","skillsRequired","status"] },
    { "name": "skills", "file": "src/data/mock/skills.json", "primaryKey": "id", "sampleFields": ["id","name","category","level"] },
    { "name": "system_logs", "file": "src/data/mock/system-logs.json", "primaryKey": "id", "sampleFields": ["id","timestamp","level","message","module","userId","details"] },
    { "name": "task_statuses", "file": "src/data/mock/taskStatuses.json", "primaryKey": "id", "sampleFields": ["id","name","color"] },
    { "name": "technicians", "file": "src/data/mock/technicians.json", "primaryKey": "id", "sampleFields": ["id","name","email","position","skills","hourlyRate","status","roleId","location"] },
    { "name": "technician_statuses", "file": "src/data/mock/technicianStatuses.json", "primaryKey": "id", "sampleFields": ["id","name","color"] },
    { "name": "timeframes", "file": "src/data/mock/timeframes.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "urgency_levels", "file": "src/data/mock/urgencyLevels.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "users", "file": "src/data/mock/users.json", "primaryKey": "id", "sampleFields": ["id","name","email","roleId","department","createdAt"] },
    { "name": "workflow_condition_types", "file": "src/data/mock/workflow/conditionTypes.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "workflow_delays", "file": "src/data/mock/workflow/delays.json", "primaryKey": "id", "sampleFields": ["id","name","duration"] },
    { "name": "workflow_llm_models", "file": "src/data/mock/workflow/llmModels.json", "primaryKey": "id", "sampleFields": ["id","name","provider"] },
    { "name": "workflow_objectives", "file": "src/data/mock/workflow/objectives.json", "primaryKey": "id", "sampleFields": ["id","name"] },
    { "name": "workflow_recipients", "file": "src/data/mock/workflow/recipients.json", "primaryKey": "id", "sampleFields": ["id","type","value"] },
    { "name": "workflow_templates", "file": "src/data/mock/workflow/templates.json", "primaryKey": "id", "sampleFields": ["id","name","body"] },
    { "name": "workflow_trigger_types", "file": "src/data/mock/workflow/triggerTypes.json", "primaryKey": "id", "sampleFields": ["id","name"] }
  ],
  "relations": [
    { "from": "offers.contactId", "to": "contacts.id", "type": "many-to-one", "note": "Offer -> Contact" },
    { "from": "sales.contactId", "to": "contacts.id", "type": "many-to-one", "note": "Sale -> Contact" },
    { "from": "sales.offerId", "to": "offers.id", "type": "many-to-one", "note": "Sale -> Offer (converted)" },
    { "from": "sales.items[].itemId (type==service)", "to": "services.id", "type": "many-to-one", "note": "Sale item referencing service" },
    { "from": "sales.items[].itemId (type==article)", "to": "articles.id", "type": "many-to-one", "note": "Sale item referencing article/article inventory" },
    { "from": "offers.items[].itemId (type==service)", "to": "services.id", "type": "many-to-one", "note": "Offer item -> Service" },
    { "from": "offers.items[].itemId (type==article)", "to": "articles.id", "type": "many-to-one", "note": "Offer item -> Article" },
    { "from": "service_orders.customer.id", "to": "contacts.id", "type": "many-to-one", "note": "Service order embed maps to Contact" },
    { "from": "service_orders.assignedTechnicians[]", "to": "technicians.id", "type": "many-to-many", "note": "Service order assigned technicians" },
    { "from": "service_orders.saleId", "to": "sales.id", "type": "many-to-one", "note": "Service order may be created from a sale" },
    { "from": "projects.contactId", "to": "contacts.id", "type": "many-to-one", "note": "Project -> Contact" },
    { "from": "projects.ownerId", "to": "technicians.id", "type": "many-to-one", "note": "Project owner -> Technician" },
    { "from": "projects.teamMembers[]", "to": "technicians.id", "type": "many-to-many", "note": "Project team members" },
    { "from": "documents.relatedType + documents.relatedId", "to": "polymorphic (offers,sales,service_orders,dispatch_jobs,projects)", "type": "polymorphic", "note": "Documents attach to multiple entity types via relatedType/relatedId" },
    { "from": "users.roleId", "to": "roles.id", "type": "many-to-one", "note": "User -> Role" },
    { "from": "technicians.roleId", "to": "roles.id", "type": "many-to-one", "note": "Technician -> Role" },
    { "from": "contact_tasks.assigneeId", "to": "technicians.id", "type": "many-to-one", "note": "Task assignee" }
  ]
}
